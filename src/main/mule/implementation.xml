<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:book-my-show-res-tful-api="http://www.mulesoft.org/schema/mule/book-my-show-res-tful-api"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:rds="http://www.mulesoft.org/schema/mule/rds"
	xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/rds http://www.mulesoft.org/schema/mule/rds/current/mule-rds.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/book-my-show-res-tful-api http://www.mulesoft.org/schema/mule/book-my-show-res-tful-api/current/mule-book-my-show-res-tful-api.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
	<flow name="GetMovies" doc:id="624ebe74-be8e-4b51-8f92-975b3edbe29c" >
		<set-variable value="#[message.attributes.queryParams.MovieName]" doc:name="MovieName" doc:id="3b9e5ea0-582b-4856-971c-0af6adff3290" variableName="MovieName"/>
		<choice doc:name="Choice" doc:id="ec2480fb-628e-4e3a-8a16-3a3acfd6a1c4" >
			<when expression='#[(vars.MovieName)!= null]'>
				<db:select doc:name="Select All Movies" doc:id="8eecb54c-5dfa-4849-b296-ccd878921cbf" config-ref="Database_Config">
			<db:sql><![CDATA[select * from movies where moviename =:moviename;]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"moviename": vars.MovieName
}]]]></db:input-parameters>
		</db:select>
				<choice doc:name="Choice" doc:id="c6b1c6ee-2dd4-41c7-ac60-6fc27333e039" >
					<when expression="#[sizeOf(payload)&gt;0]">
						<ee:transform doc:name="Transform Message" doc:id="4bad6649-fc9b-4313-8203-2f5a5b288a5d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieID: payload01.movieid,
	MovieName: payload01.moviename default "",
	MovieDescription: payload01.moviedescription default "",
	"MovieLanguage": payload01.lang as String,
	Price: payload01.price default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
					</when>
					<otherwise >
						<set-payload value='#["Sorry! This Movie Name is not Available"]' doc:name='"Sorry! This Movie Name is not Available"' doc:id="88fa1f38-3b9c-4808-8df4-0883a2dea288" />
					</otherwise>
				</choice>
			</when>
			<otherwise>
				<db:select doc:name="Select" doc:id="b809559e-6c3f-4591-a144-170374efa58d" config-ref="Database_Config">
					<db:sql><![CDATA[select * from movies;]]></db:sql>
				</db:select>
				<ee:transform doc:name="Transform Message" doc:id="3bc8b144-1e15-4c9b-aa9b-528c1cd85207">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieID: payload01.movieid,
	MovieName: payload01.moviename default "",
	MovieDescription: payload01.moviedescription default "",
	"MovieLanguage": payload01.lang as String,
	Price: payload01.price default 0
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="a0378137-f90b-4b2c-807b-36baf496124f" message="#[payload]"/>
	</flow>
	<flow name="GetMovieByID" doc:id="376369f8-98aa-49e9-82fb-d0badfa429aa" >
		<db:select doc:name="Select" doc:id="4f6cd18a-7845-4f1f-977d-7feb28b218aa" config-ref="Database_Config">
			<db:sql><![CDATA[select  * from movies where movies.movieid = :ID;]]></db:sql>
			<db:input-parameters><![CDATA[#[{"ID":attributes.uriParams.movie_id}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="9a20ff47-2824-4efb-b084-f4a67f4fe018" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Transform Message" doc:id="da463766-3236-4671-bba5-6bc52dee3d45">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieName: payload01.moviename default "",
	MovieDescription: payload01.moviedescription default "",
	Language: payload01.lang default "",
	Price: payload01.price default 0
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="20b99aab-a005-4595-b794-39672fc9e8ed" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No record found!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="06138c02-5c59-4783-ab4a-2be410d136b9" message="#[payload]" />
	
</flow>
	<flow name="GetShows" doc:id="132360ef-4ce6-4394-8a2f-d3d08510de65" >
		<set-variable value="#[message.attributes.queryParams.language]" doc:name="language" doc:id="b723abd5-f858-442e-ba0d-c3f03e341bf2" variableName="language"/>
		<set-variable value="#[message.attributes.queryParams.SeatType]" doc:name="SeatType" doc:id="7c2a0ffe-4c56-4961-ac94-0d104e5190f0" variableName="SeatType" />
		<choice doc:name="Choice" doc:id="3335c027-67c3-4959-8caa-ac92ef89a23b" >
			<when expression="#[(vars.language != null) and (vars.SeatType != null)]">
				<db:select doc:name="Select" doc:id="6a438eff-621b-4114-aa88-a64bb86ef0cd" config-ref="Database_Config" >
					<db:sql ><![CDATA[select * from show where lang= :language and seattype= :SeatType;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"language": vars.language,
	"SeatType": vars.SeatType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.language)!=null]">
				<db:select doc:name="Select" doc:id="8f2dea56-9ef6-4eab-9cab-3a02efb5c5dd" config-ref="Database_Config">
					<db:sql ><![CDATA[select * from show where lang= :language ]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"language": vars.language
	
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.SeatType)!=null]">
				<db:select doc:name="Select" doc:id="d22fe5c0-894b-40e8-9f4a-5417d71d9b54" config-ref="Database_Config">
					<db:sql ><![CDATA[select * from show where seattype = :SeatType;]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"SeatType": vars.SeatType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<otherwise >
				<db:select doc:name="Select" doc:id="6cf70ca3-cf8a-41ba-98e4-b74ae2d6eafa" config-ref="Database_Config">
			<db:sql><![CDATA[select * from show;]]></db:sql>
		</db:select>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="766dadd9-399d-4574-865a-0a9f342db0a5">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ShowID: payload01.showid as String,
	MovieID: payload01.movieid as String,
	ShowStartTime: payload01.starttime as String default "",
	ShowEndTime: payload01.endtime as String default "",
	SeatType: payload01.seattype default "",
	AvailableSeats: payload01.availableseats default 0,
	language: payload01.lang default "",
	price: payload01.price default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="cfa6a675-8e4d-4a1c-9ed0-68023bf6b027" />
	</flow>
	<flow name="GetShowByID" doc:id="5660db57-266a-4502-8d96-c75d34056051" >
		<db:select doc:name="Select" doc:id="a534e5d8-6028-4cbd-96d7-ad48cea6bdce" config-ref="Database_Config">
			<db:sql ><![CDATA[select movies.moviename, show.starttime, show.endtime, show.seattype, show.availableseats, show.lang, movies.price 
from movies inner join show on movies.movieid = show.movieid where showid= :ID; ]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"ID": attributes.uriParams.shows_id}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="96e1d227-afd8-4c9b-8e9c-a3cbefd4718b" >
			<when expression="#[sizeOf(payload)&gt;0]">
				<ee:transform doc:name="Transform Message" doc:id="96a907cd-fb21-4dc3-b5de-ff6a8f508507">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	MovieName: payload01.moviename default "",
	ShowStartTime: payload01.starttime as String default "",
	ShowEndTime: payload01.endtime as String default "",
	SeatType: payload01.seattype default "",
	AvailableSeats: payload01.availableseats default 0,
	language: payload01.lang default "",
	price: payload01.price default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="d800c773-dddd-4ece-8281-9b03cd5a1527" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No Show Available!"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="8bfd213e-7bfa-455d-8c71-021723ca7a95" />
	</flow>
	<flow name="DeleteShowByID" doc:id="ce10a975-d4aa-46b0-a4ba-931e4c27ba46" >
		<db:delete doc:name="Delete" doc:id="879a237e-7a63-45eb-934d-ec2ed9e80a4d" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from show where showid = :ID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"ID": attributes.uriParams.shows_id}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="cab2ada0-84ae-4e6d-9ce0-ce7d7e1061f0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Show Deleted Successfully!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="DeleteMovieByID" doc:id="9d9b84a6-005e-470d-ac6d-7b9bcef203b7" >
		<db:delete doc:name="Delete" doc:id="8efdb49b-1356-42b8-8600-ffe273775d75" config-ref="Database_Config">
			<db:sql ><![CDATA[delete from movies where movieid = :ID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{"ID":attributes.uriParams.movie_id}]]]></db:input-parameters>
		</db:delete>
		<ee:transform doc:name="Transform Message" doc:id="e8d82fef-4b00-4536-a142-1cb91b79df77" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Movie Deleted Successfully!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<sub-flow name="Return_Success_Fail" doc:id="490858b6-76f1-4a59-ad86-13f6f8fe2a9a" >
		<choice doc:name="Choice" doc:id="88ec70b0-a73b-4b73-ab54-5b681d94e777">
			<when expression="#[payload.affectedRows&gt;0]">
				<ee:transform doc:name="Success" doc:id="a175d4cb-0833-4608-a577-0df7e0d4c6c0">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": vars.success
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Fail" doc:id="dbe8c206-4d37-4327-8b4a-641854d8d7c5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: vars.fail
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="InsertMovies" doc:id="2e7d955c-0714-47ef-8125-d6aa31f1b9cf" >
		<db:insert doc:name="Insert" doc:id="5c90e663-3193-40a0-820d-20e23afef869" config-ref="Database_Config">
			<db:sql ><![CDATA[insert into movies values(:ID, :MovieName, :language, :desc, :price)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"ID": payload.MovieID,
	"MovieName": payload.MovieName,
	"language": payload.Language,
	"desc": payload.MovieDescription,
	"price": payload.Price
	
}]]]></db:input-parameters>
		</db:insert>
		<ee:transform doc:name="Movie Inserted" doc:id="d68721b5-0873-405b-9dc7-9b356ad813ac" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Movie Inserted Successfully!"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		
	</flow>
	<flow name="AddShow" doc:id="255fd8c2-80a4-4f72-bf16-1d05ece19cab" >
		<try doc:name="Try" doc:id="4d5d39dd-d8a1-45a8-ab65-9aeff60a2343" >
			<db:insert doc:name="Insert" doc:id="467fb6b6-91df-4c0f-bcc1-1cb27c8e9917" config-ref="Database_Config">
			<db:sql><![CDATA[insert  into show (showid, movieid, starttime, endtime, seattype, availableseats, lang, price)
select :ID, movies.movieid, :StartTime, :EndTime, :SeatType, :AvailableSeats, movies.lang, movies.price 
from movies where movies.moviename = :MovieName;]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"ID": payload.ShowID,
	"MovieName": payload.MovieName,
	"StartTime": payload.ShowStartTime,
	"EndTime": payload.ShowEndTime,
	"SeatType": payload.SeatType,
	"AvailableSeats": payload.AvailableSeats
}]]]></db:input-parameters>
		</db:insert>
			<set-variable value='Show inserted Successfully' doc:name="success" doc:id="d35846ab-4018-4b52-8d9e-1af6cd554f5e" variableName="success"/>
			<set-variable value='Sorry! Show not Inserted..Kindly give the correct Movie Name ' doc:name="fail" doc:id="556adf45-c382-41db-9205-ecfeded5306f" variableName="fail"/>
			<flow-ref doc:name="Return Success/Fail" doc:id="9ce4fafe-b9b8-433a-820b-a9aa33d919e2" name="Return_Success_Fail" />
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="ae10e0ad-a452-4c63-8b75-4f323e28e617" type="DB:QUERY_EXECUTION">
					<ee:transform doc:name="ShowID Already Exist" doc:id="84e24a55-d5c6-47fc-983a-e2c4ece2707d" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Show ID:"++ payload.ShowID ++ " is Already exist!"
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-continue>
			</error-handler>
		</try>
	</flow>
	<flow name="BookTicket" doc:id="574ec34a-a4fc-4737-b022-4822b4cbe3ed" >
		<choice doc:name="Choice" doc:id="da57efd3-fb96-41c5-b29c-3c198f96a920" >
			<when expression="#[(payload.NoOfPerson&gt;=1 and payload.NoOfPerson&lt;10)]">
				<db:insert doc:name="Insert" doc:id="4db45a04-015f-4024-ab0d-12d2ae0a70d3" config-ref="Database_Config">
			<db:sql><![CDATA[insert TOP(1) into bookTicket (movieid, showid, moviename, moviedate, movietime, NoOFPerson,seattype, Totalprice)
select show.movieid, show.showid, :MovieName, :date, :Time , :NoOfPerson, :SeatType, movies.price * :NoOfPerson from show inner join movies 
on show.movieid = movies.movieid
where movies.moviename = :MovieName;
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"MovieName": payload.MovieName,
	"date": payload.date,
	"Time": payload.Time,
	"NoOfPerson": payload.NoOfPerson,
	"SeatType": payload.SeatType
}]]]></db:input-parameters>
		</db:insert>
				<db:select doc:name="Select" doc:id="222e73b4-cfc8-42c2-9684-29edcaa9d450" config-ref="Database_Config">
			<db:sql><![CDATA[select * from bookTicket where bookid = (SELECT MAX(bookid)  FROM bookTicket);]]></db:sql>
		</db:select>
				<ee:transform doc:name="ETicket" doc:id="05996ca1-eaeb-4099-8140-d41bb767f6d0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

fun prepareList(list:Array, maxSize: Number) = if(sizeOf(list) >= maxSize )
list
else
prepareList(list ++ [(sizeOf(list) + 1) as Number],maxSize)

---
payload map(ticket, index)->{
   "message": "Movie Booked Successfully. PFB ETicket Details",
	MovieName: ticket.MovieName,
	Audi: randomInt(4)+1,
	Date: ticket.moviedate,
	Time: ticket.movietime,
	SeatNo: prepareList([], ticket.NoOFPerson),
	TotalPrice: ticket.Totalprice
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<when expression="(payload.NoOfPerson&gt;=10)">
				
		<db:insert doc:name="Insert" doc:id="db613459-81b9-46ef-9fd4-72254a785302" config-ref="Database_Config">
			<db:sql><![CDATA[insert TOP(1) into bookTicket (movieid, showid, moviename, moviedate, movietime, NoOFPerson,seattype, Totalprice)
select show.movieid, show.showid, :MovieName, :date, :Time , :NoOfPerson, :SeatType, movies.price * :NoOfPerson from show inner join movies 
on show.movieid = movies.movieid
where movies.moviename = :MovieName;
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	"MovieName": payload.MovieName,
	"date": payload.date,
	"Time": payload.Time,
	"NoOfPerson": payload.NoOfPerson,
	"SeatType": payload.SeatType
}]]]></db:input-parameters>
		</db:insert>
		<db:update doc:name="Update" doc:id="7fb212d5-0d86-49ae-a4b3-97d2cb08360b" config-ref="Database_Config">
			<db:sql><![CDATA[update bookTicket set Totalprice = Totalprice -(Totalprice * 10/100) where bookid= (SELECT MAX(bookid)  FROM bookTicket) ]]></db:sql>
		</db:update>
				<db:select doc:name="Select" doc:id="539ff15e-84e0-473b-bb81-ccfc193b3f36" config-ref="Database_Config">
			<db:sql><![CDATA[select * from bookTicket where bookid = (SELECT MAX(bookid)  FROM bookTicket);]]></db:sql>
		</db:select>
				<ee:transform doc:name="ETicket" doc:id="d0243940-990d-4196-8381-8468d7d0e5db">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

fun prepareList(list:Array, maxSize: Number) = if(sizeOf(list) >= maxSize )
list
else
prepareList(list ++ [(sizeOf(list) + 1) as Number],maxSize)
---

payload map(ticket, index)->{
	 "message": "Movie Booked Successfully. PFB ETicket Details",
	MovieName: ticket.MovieName default "",
	Audi: randomInt(4)+1,
	Date: ticket.moviedate,
	Time: ticket.movietime,
	SeatNo: prepareList([], ticket.NoOFPerson),
	"Discount": "10%",
	TotalPrice: ticket.Totalprice
} as Object

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</when>
			<otherwise>
				<set-payload value='#["Invalid No of Person. Kindly enter the minimum 1 person to book a ticket!"]' doc:name="Invalid No of Person" doc:id="60e48427-33b4-45f3-a641-41bcbc052b92" />
			</otherwise>
		</choice>
		<file:write doc:name="Write" doc:id="6b7792d4-f86c-49a6-ae7a-4c4b21082b5a" config-ref="File_Config" path="ticket.csv">
			<file:content ><![CDATA[#[output application/json
---
payload]]]></file:content>
		</file:write>
	</flow>
	<flow name="UpdateMovieByID" doc:id="3e1a38ad-7b3f-4b5d-a774-07743dd2b104" >
		<db:update doc:name="Update" doc:id="eb097918-ec24-48f3-a8b7-eae12c305933" config-ref="Database_Config">
			<db:sql ><![CDATA[update movies set moviename = :MovieName, moviedescription = :MovieDescription,
lang= :Language, price = :Price where movieid= :MovieID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"MovieID":attributes.uriParams.movie_id,
	"MovieName": payload.MovieName,
	"MovieDescription": payload.MovieDescription,
	"Language": payload.Language,
	"Price": payload.Price,
	
}]]]></db:input-parameters>
		</db:update>
		<set-variable value="Movie updated Successfully!" doc:name="success" doc:id="f9d6d5d9-2ff3-4999-9e5e-2c3787e5f204" variableName="success"/>
		<set-variable value="Movie ID not exist!" doc:name="fail" doc:id="1aa03e3a-c622-4a02-a028-d4ce5f46864e" variableName="fail"/>
		<flow-ref doc:name="Return_Success/Fail" doc:id="31590b73-0a8f-45aa-96ea-1bba5d7c7567" name="Return_Success_Fail"/>
	</flow>
	<flow name="UpdateShowByID" doc:id="be9c6fd0-cb64-4656-a3b4-3c85db390414" >
		<db:update doc:name="Update" doc:id="3b2eb0ca-3b30-458c-8ca3-24c5ededb203" config-ref="Database_Config">
			<db:sql ><![CDATA[update show set show.starttime = :ShowStartTime,
show.endtime = :ShowEndTime , show.seattype = :SeatType, 
show.availableseats = :AvailableSeats, show.lang = movies.lang, show.price = :Price
from show inner join movies on show.movieid = movies.movieid  where show.showid = :ShowID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"ShowID" : attributes.uriParams.shows_id,
	"ShowStartTime": payload.ShowStartTime,
	"ShowEndTime": payload.ShowEndTime,
	"SeatType" : payload.SeatType,
	"AvailableSeats": payload.AvailableSeats,
	"Price": payload.Price
	

}]]]></db:input-parameters>
		</db:update>
		<set-variable value="Show updated Successfully!" doc:name="success" doc:id="53bf5b17-e3a2-470d-b232-0f401bb4da44" variableName="success" />
		<set-variable value="Show ID not exist!" doc:name="fail" doc:id="73bd6f45-09f1-48c7-8563-e06f848f4d33" variableName="fail" />
		<flow-ref doc:name="Return_Success/Fail" doc:id="d3df1bbf-cccd-4ab4-a6c3-0325dc9aacec" name="Return_Success_Fail"/>
	</flow>
	

</mule>
